<?php

namespace Demos\BlogBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository
{
	public function findByCategory($arParams){
		if($arParams['catID']){
			$arParams['orderBy'] = isset($arParams['orderBy']) ? $arParams['orderBy'] : 'updated_date';
			$arParams['orderRule'] = isset($arParams['orderRule']) ? $arParams['orderRule'] : 'DESC';
			$arParams['quantity'] = isset($arParams['quantity']) ? $arParams['quantity'] : NULL;
			$arParams['offset'] = isset($arParams['offset']) ? $arParams['offset'] : 0;

			$qb = $this->createQueryBuilder('p');
			$qb ->select('p')
				->where($qb->expr()->in('p.category', $arParams['catID']))
				->orderBy('p.'.$arParams['orderBy'], $arParams['orderRule'])
			    ->setMaxResults($arParams['quantity'])
			    ->setFirstResult($arParams['offset'])
				;
			$query = $qb -> getQuery();

			$result = $query->getResult();
		}else{
			$result = false;
		}
		return $result;
	}

	public function countPostsInCategory($arParams){
		if($arParams['catID']){

			$qb = $this->createQueryBuilder('p');
			$qb ->select('p')
				->where($qb->expr()->in('p.category', $arParams['catID']))
				;
			$qb->add('select', $qb->expr()->count('p'));

			$query = $qb -> getQuery();

			$result = $query->getSingleScalarResult();
		}else{
			$result = false;
		}
		return $result;
	}

}
