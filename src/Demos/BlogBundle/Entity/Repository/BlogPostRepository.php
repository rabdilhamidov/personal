<?php

namespace Demos\BlogBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * BlogPostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogPostRepository extends EntityRepository
{
	public function query_posts($arParams){
		$arParams['catID'] = isset($arParams['catID']) ? $arParams['catID'] : NULL;
		$arParams['orderBy'] = isset($arParams['orderBy']) ? $arParams['orderBy'] : 'updated_date';
		$arParams['orderRule'] = isset($arParams['orderRule']) ? $arParams['orderRule'] : 'DESC';
		$arParams['quantity'] = isset($arParams['quantity']) ? $arParams['quantity'] : NULL;
		$arParams['offset'] = isset($arParams['offset']) ? $arParams['offset'] : 0;

		$qb = $this->createQueryBuilder('p');
		$q_select = $qb ->select('p');
		$q_select	-> orderBy('p.'.$arParams['orderBy'], $arParams['orderRule'])
					-> setMaxResults($arParams['quantity'])
					-> setFirstResult($arParams['offset'])
			;
		if(isset($arParams['catID'])){
			$q_select -> where($qb->expr()->in('p.category', $arParams['catID']));
		}

		$query = $qb -> getQuery();
		$result = $query->getResult();
		return $result;
	}

	public function count_posts($arParams=false){
		$qb = $this->createQueryBuilder('p');
		$q_select = $qb ->select('p');
		if(isset($arParams['catID'])){
			$q_select -> where($qb->expr()->in('p.category', $arParams['catID']));
		}
		$qb -> add('select', $qb->expr()->count('p'));
		$query = $qb -> getQuery();
		$result = $query->getSingleScalarResult();
		return $result;
	}
}
